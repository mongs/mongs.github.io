<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Go语言笔记（二）- 基础知识]]></title>
    <url>%2F2017%2F09%2F24%2F02_Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[关键字 break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var 注释12345// 单行注释/*多行注释*/ Go程序的一般结构：basic_structure.go Go程序是通过 package 来组织的（与python类似） 只有 package 名称为 main 的包可以包含 main 函数 一个可执行程序 有且仅有 一个 main 包 通过 import 关键字来导入其它非 main 包 通过 const 关键字来进行常量的定义 通过在函数体外部使用 var 关键字来进行全局变量的声明与赋值 通过 type 关键字来进行结构(struct)或接口(interface)的声明 通过 func 关键字来进行函数的声明 导包导入package第一种方式，依次导入 1234import "fmt"import "os"import "time"import "strings" 第二种方式，简写方式导入 123456import ( "fmt" "io" "time" "strconv") 注意： 如果导入包之后 未调用 其中的函数或者类型将会报出编译错误imported and not used: &quot;&lt;pkg&gt;&quot; package别名当使用第三方包时，包名可能会非常接近或者相同，此时就可以使用别名来进行区别和调用。如： 123456import ( f "fmt")// 调用时f.Println("hello world") 省略调用不建议使用，易混淆；不可以和别名同时使用。代码如下： 1234567import ( . "fmt")func main()&#123; // 省略包名 调用 Println("hello world")&#125; 可见性规则 Go语言中，使用 大小写 来决定该 常量、变量、类型、接口、结构或函数 是否可以被外部包所调用 首字母小写是私有private 首字母大写是共有public]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go语言笔记（一）- 简介及安装]]></title>
    <url>%2F2017%2F09%2F24%2F01_Go%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[什么是GoGo是一门并发支持、垃圾回收的编译型系统编程语言，旨在创造一门具有静态编译语言的高性能和动态语言的高效开发之间拥有良好平衡点的一门编程语言。 Go的主要特点有那些？ 类型安全 和 内存安全 以非常直观和极低代价的方案实现高并发 高效的垃圾回收机制 快速编译（同时解决C语言中头文件太多的问题） 为多核计算机提供性能提升的方案 UTF-8编码支持 实际应用 Youtube全球最大的视频网站 七牛云存储以及旗下的网盘服务 爱好者开发的Go论坛及博客 谷歌、盛大、七牛、360等企业都在用 海量开源项目：Go wiki、Go Walker、Go Language Resources Go环境配置Go安装到golang官网下载，如果不能翻墙可以到Golang中国下载。 安装方式： 源码安装 标准包安装 第三方工具安装 安装完成后，在cmd中输入go version，如果输出go版本号说明安装成功。也可以输入go env查看相关信息，输出结果如下图： GOPATH与工作空间GOPATH是我们的工作目录，如F:/Go，在windows的环境变量中新增GOPATH一项，如下图： $GOPATH目录下约定有三个子目录： src 存放源代码 pkg 编译后生成的文件 bin 编译后生成的可执行文件 go 常用命令 go get：获取远程包（需 提前安装 git或hg） go run：直接运行程序 go build：测试编译，检查是否有编译错误 go fmt：格式化源码（部分IDE在保存时自动调用） go install：编译包文件并编译整个程序 go test：运行测试文件 go doc：查看文档（CHM手册） 搭建本地Go官网，命令行输入$ godoc -http=:6060]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F09%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>杂谈</category>
      </categories>
      <tags>
        <tag>开篇</tag>
      </tags>
  </entry>
</search>
