<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[jQueryMobile]]></title>
    <url>%2F2017%2F12%2F13%2FJQM%2F</url>
    <content type="text"><![CDATA[1、简介 HTML5 UI framework; 专门用于RWD( responsive web design响应式网站)和app应用; 适用所有移动设备，平板，桌面设备 依赖jQuery 2、资源官网 菜鸟教程 3、page-single基本结构如下： 123456789101112131415&lt;!--page--&gt;&lt;div data-role="page" data-theme="b"&gt; &lt;!--header--&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;header&lt;/h1&gt; &lt;/div&gt; &lt;!--content--&gt; &lt;div role="main" class="ui-content"&gt; content &lt;/div&gt; &lt;!--footer--&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;footer&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; 3.1 data-positiondata-position=&quot;fixed&quot;设置固定定位 3.2 data-theme设置主题，如data-theme=&quot;b&quot;为反色主题 4、多页面给每个page指定特有的id，将id传递给a链接的href属性中，不要忘记加#号，如下： 123456789101112131415161718&lt;div data-role="page" id="page1" data-title="jQueryMobile"&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;header&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#page2" data-transition="slide"&gt;page2&lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;footer&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-role="page" id="page2"&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#page1" data-transition="pop" data-direction="reverse"&gt;page1&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; 4.1. data-title指定页面的title标题 4.2. data-transition指定页面跳转的动画，添加到a标签的属性中，有如下表现形式: data-transition=&quot;slide&quot; data-transition=&quot;slideup&quot; data-transition=&quot;slidedowm&quot; data-transition=&quot;fade&quot; data-transition=&quot;pop&quot; data-transition=&quot;flip&quot; 4.3. data-directiondata-direction=&quot;reverse&quot; 指定页面切换的动画为反向 5、button按钮，可以使用a、button、input标签指定按钮样式。 5.1 默认样式a 标签添加class ui-btn 123&lt;a class="ui-btn"&gt;基础样式button&lt;/a&gt;&lt;button&gt;基础样式button&lt;/button&gt;&lt;input type="button" value="基础样式button"&gt; 5.2 圆角样式使用圆角的样式，添加class ui-corner-all 12&lt;a href="#" class="ui-btn ui-corner-all"&gt;圆角样式按钮&lt;/a&gt;&lt;button class="ui-btn ui-corner-all"&gt;按钮&lt;/button&gt; 5.3 阴影样式使用阴影样式，添加class ui-shadow 12&lt;a href="#" class="ui-btn ui-shadow"&gt;阴影样式按钮&lt;/a&gt;&lt;button class="ui-btn ui-shadow"&gt;按钮&lt;/button&gt; 5.4 行内样式使用行内样式，添加class ui-btn-inline 1&lt;a href="#" class="ui-btn ui-btn-inline"&gt;行内样式按钮&lt;/a&gt; 5.5 主题样式可以使用class ui-btn-a 与 ui-btn-b设置按钮主题， ui-btn-b 为反色主题， 如下： 12&lt;a href="#" class="ui-btn ui-btn-a"&gt;a样式按钮&lt;/a&gt;&lt;a href="#" class="ui-btn ui-btn-b"&gt;b样式按钮&lt;/a&gt; 5.6 MINI样式添加class ui-mini，设置按钮为mini样式： 1&lt;a href="#" class="ui-btn ui-mini"&gt;mini样式按钮&lt;/a&gt; 5.7 ICON样式按钮中添加icon，给元素添加class ui-icon-*，常用icon列表参见第6章，同时指定按钮放置的位置。 按钮放置位置，通过class ui-btn-icon-*指定，* 有如下的值： ui-btn-icon-left ui-btn-icon-right ui-btn-icon-top ui-btn-icon-button ui-btn-icon-notext 无文本样式 1&lt;a href="#" class="ui-btn ui-btn-inline ui-icon-camera ui-btn-icon-left"&gt;icon样式按钮&lt;/a&gt; 5.8 禁用样式给按钮添加class ui-state-disabled 呈现禁用样式 5.9 data属性控制样式 data-role=”button” 定义按钮 data-theme=”b” 切换到深色的主题,可以单独控制组件的主题样式 data-icon=”back” 添加图标icon data-iconpos=”top” 定义icon的位置 data-inline=”true” 行内显示 data-role=”controlgroup” 形成一个组 data-corners=”false” 去掉默认的圆角 data-shadow=”false” 去掉阴影 data-role=”controlgroup” data-type=”horizontal” 横向组 6. ICONS 8. DIALOG对话框8.1 显示对话框在按钮上添加 data-rel=&quot;dialog&quot;，在页面上添加data-role=&quot;dialog&quot;，代码如下： 12345678910111213&lt;div data-role="page" id="page1" data-title="jQueryMobile"&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;header&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;!--看这里--&gt; &lt;a href="#dialog" class="ui-btn ui-corner-all" data-rel="dialog"&gt;基础样式button&lt;/a&gt; &lt;/div&gt;&lt;/div&gt;&lt;!--还有这儿--&gt;&lt;div data-role="dialog" id="dialog"&gt; hello&lt;/div&gt; 8.2 关闭对话框1$('.ui-dialog').dialog('close'); 9. LIST列表9.1 无序列表使用ul&gt;li标签，并给ul添加data-role=&quot;listview&quot;属性 代码如下： 1234567&lt;ul data-role="listview"&gt; &lt;li&gt;Acura&lt;/li&gt; &lt;li&gt;Audi&lt;/li&gt; &lt;li&gt;BMW&lt;/li&gt; &lt;li&gt;Cadillac&lt;/li&gt; &lt;li&gt;Ferrari&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.2 有序列表使用ol&gt;li标签，并给ol添加属性data-role=&quot;listview&quot; 代码如下： 1234567&lt;ol data-role="listview"&gt; &lt;li&gt;Acura&lt;/li&gt; &lt;li&gt;Audi&lt;/li&gt; &lt;li&gt;BMW&lt;/li&gt; &lt;li&gt;Cadillac&lt;/li&gt; &lt;li&gt;Ferrari&lt;/li&gt;&lt;/ol&gt; 效果如下图： 9.3 链接列表再无序列表的基础上，li中使用a标签包裹子元素。 代码如下： 1234567&lt;ul data-role="listview"&gt; &lt;li&gt;&lt;a href="#"&gt;Acura&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Audi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;BMW&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cadillac&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Ferrari&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.4 内置列表在链接列表的基础上，添加属性data-inset=&quot;true&quot;，为列表添加边距、圆角等样式。 代码如下： 1234567&lt;ul data-role="listview" data-inset="true"&gt; &lt;li&gt;&lt;a href="#"&gt;Acura&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Audi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;BMW&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cadillac&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Ferrari&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.5 过滤列表在列表的基础上，添加属性data-filter=&quot;true&quot;，为列表添加过滤样式及功能，并通过属性data-filter-placeholder=&quot;占位文字&quot;设置搜索框中的占位文字。 代码如下： 1234567&lt;ul data-role="listview" data-inset="true" data-filter="true" data-filter-placeholder="Search fruits..."&gt; &lt;li&gt;&lt;a href="#"&gt;Acura&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Audi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;BMW&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cadillac&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Ferrari&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 在输入框中输入内容可以对列表中的内容进行过滤，如图： 9.6 DATALIST列表类似于HTML5中data-list的效果，在输入框中输入内容会有个AutoComplete提示效果 代码如下： 1234567891011&lt;form class="ui-filterable"&gt; &lt;input id="autocomplete-input" data-type="search" placeholder="Search fruits..."&gt;&lt;/form&gt;&lt;ul data-role="listview" data-inset="true" data-filter="true" data-filter-reveal="true" data-input="#autocomplete-input"&gt; &lt;li&gt;&lt;a href="#"&gt;Acura&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Audi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;BMW&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cadillac&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Ferrari&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 当在输入框输入内容后，效果如下图： 9.7 类分割列表（类似通讯录列表）代码如下： 12345678&lt;ul data-role="listview" data-inset="true" data-divider-theme="a"&gt; &lt;li data-role="list-divider"&gt;Mail&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Inbox&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Outbox&lt;/a&gt;&lt;/li&gt; &lt;li data-role="list-divider"&gt;Contacts&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Friends&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Work&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.8 自动类分割列表（类似通讯录列表）给列表添加属性data-autodividers=&quot;true&quot;会自动进行类分割 代码如下： 123456789&lt;ul data-role="listview" data-autodividers="true" data-filter="true" data-inset="true"&gt; &lt;li&gt;&lt;a href="index.html"&gt;Adam Kinkaid&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Alex Wickerham&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Avery Johnson&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Bob Cabot&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Caleb Booth&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Christopher Adams&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Culver James&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.9 气泡列表给包裹气泡文本内容的元素添加class ui-li-count，同时可以在ul元素上添加属性data-count-theme=&quot;b&quot;设置主题样式 代码如下： 1234567&lt;ul data-role="listview" data-count-theme="b" data-inset="true"&gt; &lt;li&gt;&lt;a href="#"&gt;Inbox &lt;span class="ui-li-count"&gt;12&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Outbox &lt;span class="ui-li-count"&gt;0&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Drafts &lt;span class="ui-li-count"&gt;4&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Sent &lt;span class="ui-li-count"&gt;328&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Trash &lt;span class="ui-li-count"&gt;62&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.10 图标列表在li上添加属性data-icon=&quot;xxx&quot;设置图标 代码如下： 1234567&lt;ul data-role="listview" data-inset="true"&gt; &lt;li data-icon="custom" id="skull"&gt;&lt;a href="#"&gt;custom-icon&lt;/a&gt;&lt;/li&gt; &lt;li data-icon="delete"&gt;&lt;a href="#"&gt;data-icon="delete"&lt;/a&gt;&lt;/li&gt; &lt;li data-icon="gear"&gt;&lt;a href="#"&gt;data-icon="gear"&lt;/a&gt;&lt;/li&gt; &lt;li data-icon="info"&gt;&lt;a href="#"&gt;data-icon="info"&lt;/a&gt;&lt;/li&gt; &lt;li data-icon="false"&gt;&lt;a href="#"&gt;data-icon="false"&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.11 ICONS: 16×16在a标签中添加img标签，并设置class ui-li-icon 代码如下： 1234567&lt;ul data-role="listview" data-inset="true"&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;img src=".." class="ui-li-icon ui-corner-none"&gt;France&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;img src=".." class="ui-li-icon"&gt;Germany&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;img src=".." class="ui-li-icon"&gt;Great Britain&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;img src=".." class="ui-li-icon"&gt;Finland&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;&lt;img src=".." class="ui-li-icon ui-corner-none"&gt;United States&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.12 缩略图列表在a标签中添加img标签即可给列表添加缩略图。 代码如下： 1234567891011121314151617&lt;ul data-role="listview" data-inset="true"&gt; &lt;li&gt;&lt;a href="#"&gt; &lt;img src="../_assets/img/album-bb.jpg"&gt; &lt;h2&gt;Broken Bells&lt;/h2&gt; &lt;p&gt;Broken Bells&lt;/p&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt; &lt;img src="../_assets/img/album-hc.jpg"&gt; &lt;h2&gt;Warning&lt;/h2&gt; &lt;p&gt;Hot Chip&lt;/p&gt;&lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt; &lt;img src="../_assets/img/album-p.jpg"&gt; &lt;h2&gt;Wolfgang Amadeus Phoenix&lt;/h2&gt; &lt;p&gt;Phoenix&lt;/p&gt;&lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.14 格式化列表效果图中的时间内容样式，添加class ui-li-aside。 代码如下： 12345678910111213141516171819202122232425&lt;ul data-role="listview" data-inset="true"&gt; &lt;li data-role="list-divider"&gt;Friday, October 8, 2010 &lt;span class="ui-li-count"&gt;2&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt; &lt;h2&gt;Stephen Weber&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;You've been invited to a meeting at Filament Group in Boston, MA&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Hey Stephen, if you're available at 10am tomorrow, we've got a meeting with the jQuery team.&lt;/p&gt; &lt;p class="ui-li-aside"&gt;&lt;strong&gt;6:24&lt;/strong&gt;PM&lt;/p&gt; &lt;/a&gt; &lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt; &lt;h2&gt;jQuery Team&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;Boston Conference Planning&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In preparation for the upcoming conference in Boston, we need to start gathering a list of sponsors and speakers.&lt;/p&gt; &lt;p class="ui-li-aside"&gt;&lt;strong&gt;9:18&lt;/strong&gt;AM&lt;/p&gt; &lt;/a&gt; &lt;/li&gt; &lt;li data-role="list-divider"&gt;Thursday, October 7, 2010 &lt;span class="ui-li-count"&gt;1&lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt; &lt;h2&gt;Avery Walker&lt;/h2&gt; &lt;p&gt;&lt;strong&gt;Re: Dinner Tonight&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Sure, let's plan on meeting at Highland Kitchen at 8:00 tonight. Can't wait!&lt;/p&gt; &lt;p class="ui-li-aside"&gt;&lt;strong&gt;4:48&lt;/strong&gt;PM&lt;/p&gt; &lt;/a&gt; &lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.15 列表主题 data-theme=&quot;b&quot; 设置列表主题 data-divider-theme=&quot;a&quot; 设置类分割样式 data-count-theme=&quot;a&quot; 设置气泡样式 代码如下： 123456&lt;ul data-role="listview" data-inset="true" data-theme="b" data-divider-theme="a" data-count-theme="a"&gt; &lt;li data-role="list-divider"&gt;Divider&lt;/li&gt; &lt;li&gt;&lt;a href="index.html" data-theme="a"&gt;Inbox &lt;span class="ui-li-count"&gt;12&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Outbox &lt;span class="ui-li-count"&gt;0&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="index.html"&gt;Sent &lt;span class="ui-li-count"&gt;328&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt; 效果如下图： 9.16 列表中表单代码如下： 1234567891011121314151617181920212223242526272829303132333435363738&lt;form&gt; &lt;ul data-role="listview" data-inset="true"&gt; &lt;li class="ui-field-contain"&gt; &lt;label for="name2"&gt;Text Input:&lt;/label&gt; &lt;input type="text" name="name2" id="name2" value="" data-clear-btn="true"&gt; &lt;/li&gt; &lt;li class="ui-field-contain"&gt; &lt;label for="textarea2"&gt;Textarea:&lt;/label&gt; &lt;textarea cols="40" rows="8" name="textarea2" id="textarea2"&gt;&lt;/textarea&gt; &lt;/li&gt; &lt;li class="ui-field-contain"&gt; &lt;label for="flip2"&gt;Flip switch:&lt;/label&gt; &lt;select name="flip2" id="flip2" data-role="slider"&gt; &lt;option value="off"&gt;Off&lt;/option&gt; &lt;option value="on"&gt;On&lt;/option&gt; &lt;/select&gt; &lt;/li&gt; &lt;li class="ui-field-contain"&gt; &lt;label for="slider2"&gt;Slider:&lt;/label&gt; &lt;input type="range" name="slider2" id="slider2" value="0" min="0" max="100" data-highlight="true"&gt; &lt;/li&gt; &lt;li class="ui-field-contain"&gt; &lt;label for="select-choice-1" class="select"&gt;Choose shipping method:&lt;/label&gt; &lt;select name="select-choice-1" id="select-choice-1"&gt; &lt;option value="standard"&gt;Standard: 7 day&lt;/option&gt; &lt;option value="rush"&gt;Rush: 3 days&lt;/option&gt; &lt;option value="express"&gt;Express: next day&lt;/option&gt; &lt;option value="overnight"&gt;Overnight&lt;/option&gt; &lt;/select&gt; &lt;/li&gt; &lt;li class="ui-body ui-body-b"&gt; &lt;fieldset class="ui-grid-a"&gt; &lt;div class="ui-block-a"&gt;&lt;button type="submit" class="ui-btn ui-corner-all ui-btn-a"&gt;Cancel&lt;/button&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;button type="submit" class="ui-btn ui-corner-all ui-btn-a"&gt;Submit&lt;/button&gt;&lt;/div&gt; &lt;/fieldset&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/form&gt; 效果如下图： 10. 表格table给table标签添加属性data-role=&quot;table&quot; 代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283&lt;table data-role="table" id="table-column-toggle" data-mode="columntoggle" class="ui-responsive table-stroke"&gt; &lt;thead&gt; &lt;tr&gt; &lt;th data-priority="2"&gt;Rank&lt;/th&gt; &lt;th&gt;Movie Title&lt;/th&gt; &lt;th data-priority="3"&gt;Year&lt;/th&gt; &lt;th data-priority="1"&gt;&lt;abbr title="Rotten Tomato Rating"&gt;Rating&lt;/abbr&gt;&lt;/th&gt; &lt;th data-priority="5"&gt;Reviews&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;1&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Citizen_Kane" data-rel="external"&gt;Citizen Kane&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1941&lt;/td&gt; &lt;td&gt;100%&lt;/td&gt; &lt;td&gt;74&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;2&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Casablanca_(film)" data-rel="external"&gt;Casablanca&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1942&lt;/td&gt; &lt;td&gt;97%&lt;/td&gt; &lt;td&gt;64&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;3&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/The_Godfather" data-rel="external"&gt;The Godfather&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1972&lt;/td&gt; &lt;td&gt;97%&lt;/td&gt; &lt;td&gt;87&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;4&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Gone_with_the_Wind_(film)" data-rel="external"&gt;Gone with the Wind&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1939&lt;/td&gt; &lt;td&gt;96%&lt;/td&gt; &lt;td&gt;87&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;5&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Lawrence_of_Arabia_(film)" data-rel="external"&gt;Lawrence of Arabia&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1962&lt;/td&gt; &lt;td&gt;94%&lt;/td&gt; &lt;td&gt;87&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;6&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Dr._Strangelove" data-rel="external"&gt;Dr. Strangelove Or How I Learned to Stop Worrying and Love the Bomb&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1964&lt;/td&gt; &lt;td&gt;92%&lt;/td&gt; &lt;td&gt;74&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;7&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/The_Graduate" data-rel="external"&gt;The Graduate&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1967&lt;/td&gt; &lt;td&gt;91%&lt;/td&gt; &lt;td&gt;122&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;8&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/The_Wizard_of_Oz_(1939_film)" data-rel="external"&gt;The Wizard of Oz&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1939&lt;/td&gt; &lt;td&gt;90%&lt;/td&gt; &lt;td&gt;72&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;9&lt;/th&gt; &lt;td&gt;&lt;a href="http://en.wikipedia.org/wiki/Singin%27_in_the_Rain" data-rel="external"&gt;Singin' in the Rain&lt;/a&gt;&lt;/td&gt; &lt;td&gt;1952&lt;/td&gt; &lt;td&gt;89%&lt;/td&gt; &lt;td&gt;85&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;10&lt;/th&gt; &lt;td class="title"&gt;&lt;a href="http://en.wikipedia.org/wiki/Inception" data-rel="external"&gt;Inception&lt;/a&gt;&lt;/td&gt; &lt;td&gt;2010&lt;/td&gt; &lt;td&gt;84%&lt;/td&gt; &lt;td&gt;78&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; 效果如下图： 11. 栅格GRID栅格系统，栅格容器使用class ui-grid-* ，添加class ui-responsive可使其变成响应式栅格。 栅格中的每一项添加class ui-block-*，第一项为ui-block-a，第二项为ui-block-b，以此类推，有几个block就是几等分 11.1 单行两列代码如下： 1234&lt;div class="ui-grid-a"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block B&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; 效果如下图： 11.2 单行多列代码如下： 123456&lt;div class="ui-grid-c"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block C&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-d"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block D&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; 效果如下图： 11.3 多行多列代码如下： 1234567891011&lt;div class="ui-grid-b"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block C&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block C&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-bar ui-bar-a" style="height:60px"&gt;Block C&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- /grid-c --&gt; 效果如图： 11.4 多个栅格代码如下： 1234567891011121314151617181920212223242526&lt;h3&gt;Grid A (50/50)&lt;/h3&gt;&lt;div class="ui-grid-a ui-responsive"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-body ui-body-d"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-body ui-body-d"&gt;Block B&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- /grid-a --&gt;&lt;h3&gt;Grid B (33/33/33)&lt;/h3&gt;&lt;div class="ui-grid-b ui-responsive"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-body ui-body-d"&gt;Block A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-body ui-body-d"&gt;Block B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-body ui-body-d"&gt;Block C&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- /grid-b --&gt;&lt;h3&gt;Grid C (25/25/25/25)&lt;/h3&gt;&lt;div class="ui-grid-c ui-responsive"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-body ui-body-d"&gt;A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-body ui-body-d"&gt;B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-body ui-body-d"&gt;C&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-d"&gt;&lt;div class="ui-body ui-body-d"&gt;D&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;!-- /grid-c --&gt;&lt;h3&gt;Grid D (20/20/20/20/20)&lt;/h3&gt;&lt;div class="ui-grid-d ui-responsive"&gt; &lt;div class="ui-block-a"&gt;&lt;div class="ui-body ui-body-d"&gt;A&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-b"&gt;&lt;div class="ui-body ui-body-d"&gt;B&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-c"&gt;&lt;div class="ui-body ui-body-d"&gt;C&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-d"&gt;&lt;div class="ui-body ui-body-d"&gt;D&lt;/div&gt;&lt;/div&gt; &lt;div class="ui-block-e"&gt;&lt;div class="ui-body ui-body-d"&gt;E&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; 效果如图： 12. Collapsible折叠面板12.1 普通折叠面板给容器添加属性data-role=&quot;collapsible&quot;，h4标签是显示的内容，p标签是被折叠的内容，代码如下： 1234&lt;div data-role="collapsible"&gt; &lt;h4&gt;Heading&lt;/h4&gt; &lt;p&gt;I'm the collapsible content. By default I'm closed, but you can click the header to open me.&lt;/p&gt;&lt;/div&gt; 效果如图： 点击以后效果图： 12.2 主题 折叠面板给容器添加属性data-theme=&quot;b&quot;设置面板主题，data-content-theme=&quot;b&quot;设置内容的主题样式，代码如下： 1234&lt;div data-role="collapsible"&gt; &lt;h4&gt;Heading&lt;/h4&gt; &lt;p&gt;I'm the collapsible content. By default I'm closed, but you can click the header to open me.&lt;/p&gt;&lt;/div&gt; 效果如图： 12.3 展开 折叠面板给容器添加属性data-collapsed=&quot;false&quot;默认展开折叠面板，代码如下： 12345678&lt;div data-role="collapsible" data-collapsed="false"&gt; &lt;h4&gt;Heading&lt;/h4&gt; &lt;ul data-role="listview"&gt; &lt;li&gt;&lt;a href="#"&gt;List item 1&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;List item 2&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;List item 3&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; 效果如图： 12.4 MINI 折叠面板给容器添加属性data-mini=&quot;true&quot; 设置mini样式 12.5 ICON可以为折叠面板添加icon，通过给容器添加属性data-collapsed-icon=&quot;xxx&quot;设置折叠时icon，通过属性data-expanded-icon=&quot;xxx&quot;设置展开时的icon。 代码如下： 12345678&lt;div data-role="collapsible" data-collapsed-icon="carat-d" data-expanded-icon="carat-u"&gt; &lt;h4&gt;Heading&lt;/h4&gt; &lt;ul data-role="listview" data-inset="false"&gt; &lt;li&gt;Read-only list item 1&lt;/li&gt; &lt;li&gt;Read-only list item 2&lt;/li&gt; &lt;li&gt;Read-only list item 3&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; 折叠时的效果图： 展开时的效果图： 通过属性data-iconpos=&quot;right&quot;设置icon的位置，如图： 12.6 列表折叠面板12345678910111213141516171819202122232425262728293031323334&lt;div data-role="collapsible" data-inset="false"&gt; &lt;h3&gt;Pets&lt;/h3&gt; &lt;ul data-role="listview"&gt; &lt;li&gt;&lt;a href="#"&gt;Canary&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cat&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Dog&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Gerbil&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Iguana&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Mouse&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;!-- /collapsible --&gt;&lt;div data-role="collapsible" data-inset="false"&gt; &lt;h3&gt;Farm animals&lt;/h3&gt; &lt;ul data-role="listview"&gt; &lt;li&gt;&lt;a href="#"&gt;Chicken&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cow&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Duck&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Horse&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Pig&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Sheep&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;!-- /collapsible --&gt;&lt;div data-role="collapsible" data-inset="false"&gt; &lt;h3&gt;Wild Animals&lt;/h3&gt; &lt;ul data-role="listview"&gt; &lt;li&gt;&lt;a href="#"&gt;Aardvark&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Alligator&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Ant&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Bear&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Beaver&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cougar&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Dingo&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;!-- /collapsible --&gt; 效果如下图： 13. TAB 选项卡1234567891011121314151617181920212223&lt;div data-role="tabs" id="tabs"&gt; &lt;!--tab 按钮--&gt; &lt;div data-role="navbar"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#one" data-ajax="false"&gt;one&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#two" data-ajax="false"&gt;two&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="ajax-content-ignore.html" data-ajax="false"&gt;three&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;!--tab 内容--&gt; &lt;div id="one" class="ui-body-d ui-content"&gt; &lt;h1&gt;First tab contents&lt;/h1&gt; &lt;/div&gt; &lt;div id="two"&gt; &lt;ul data-role="listview" data-inset="true"&gt; &lt;li&gt;&lt;a href="#"&gt;Acura&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Audi&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;BMW&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Cadillac&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Ferrari&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;/div&gt; 效果如下图： 14. Controlgroup给容器添加属性data-role=&quot;controlgroup&quot;使其成为一个Controlgroup组件。 14.1 纵向代码如下： 12345678&lt;div data-role="controlgroup"&gt; &lt;a href="#" class="ui-btn ui-corner-all"&gt;No icon&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-left"&gt;Left&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-right"&gt;Right&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-top"&gt;Top&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-bottom"&gt;Bottom&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-notext"&gt;Icon only&lt;/a&gt;&lt;/div&gt; 效果如图： 14.2 MINI给容器添加属性data-mini=&quot;true&quot;设置mini样式 14.3 横向给容器添加属性 data-type=&quot;horizontal&quot; 设置横向Controlgroup。 代码如下： 12345&lt;div data-role="controlgroup" data-type="horizontal"&gt; &lt;a href="#" class="ui-btn ui-corner-all"&gt;No icon&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-left"&gt;Left&lt;/a&gt; &lt;a href="#" class="ui-btn ui-corner-all ui-icon-delete ui-btn-icon-right"&gt;Right&lt;/a&gt;&lt;/div&gt; 效果如图： 14.4 单选按钮组代码如下： 1234567891011&lt;form&gt; &lt;fieldset data-role="controlgroup"&gt; &lt;legend&gt;Vertical:&lt;/legend&gt; &lt;input type="radio" name="radio-choice-v-2" id="radio-choice-v-2a" value="on" checked="checked"&gt; &lt;label for="radio-choice-v-2a"&gt;One&lt;/label&gt; &lt;input type="radio" name="radio-choice-v-2" id="radio-choice-v-2b" value="off"&gt; &lt;label for="radio-choice-v-2b"&gt;Two&lt;/label&gt; &lt;input type="radio" name="radio-choice-v-2" id="radio-choice-v-2c" value="other"&gt; &lt;label for="radio-choice-v-2c"&gt;Three&lt;/label&gt; &lt;/fieldset&gt;&lt;/form&gt; 效果如图： 横向单选按钮组，添加属性data-type=&quot;horizontal&quot;, 效果如下图： 其他控件（如：多选框、下拉选框）同理。 15. NAVBAR给容器添加属性data-role=&quot;navbar&quot;设置navbar样式。 15.1 普通样式代码如下： 1234567&lt;div data-role="navbar"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#" class="ui-btn-active"&gt;One&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Two&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Three&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt;&lt;!-- /navbar --&gt; 效果如图： 15.2 HEADER中的NAVBAR代码如下: 1234567891011&lt;div data-role="header" style="overflow:hidden;"&gt; &lt;h1&gt;I'm a header&lt;/h1&gt; &lt;a href="#" data-icon="gear" class="ui-btn-right"&gt;Options&lt;/a&gt; &lt;div data-role="navbar"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#"&gt;One&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Two&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Three&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- /navbar --&gt;&lt;/div&gt;&lt;!-- /header --&gt; 效果如下图： 15.3 FOOTER中的NAVBAR代码如下: 12345678910&lt;div data-role="footer" style="overflow:hidden;"&gt; &lt;h4 style="text-align:center;"&gt;I'm the footer&lt;/h4&gt; &lt;div data-role="navbar"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#"&gt;One&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Two&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#"&gt;Three&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- /navbar --&gt;&lt;/div&gt;&lt;!-- /header --&gt; 效果如下图： 15.4 icon代码如下： 123456789&lt;div data-role="footer"&gt; &lt;div data-role="navbar"&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="#" data-icon="grid"&gt;Summary&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" data-icon="star" class="ui-btn-active"&gt;Favs&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="#" data-icon="gear"&gt;Setup&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt;&lt;!-- /navbar --&gt;&lt;/div&gt;&lt;!-- /footer --&gt; 效果如下图： 16. panel侧滑面板在page中添加容器，为容器添加属性data-role=&quot;panel&quot;并设置唯一id。触发侧滑面板的方式是：给a链接的href属性传递panel的id值，不要丢掉#号，示例代码如下： 16.1 普通panel1234567891011121314&lt;div data-role="page"&gt; &lt;div data-role="panel" id="panel1"&gt; hello panel &lt;/div&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;header&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#panel1" data-role="button"&gt;panel&lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;footer&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; 16.2 panel 动画形式可以通过设置panel属性data-display=&quot;overlay&quot; 来指定panel的动画形式，有如下三个取值： overlay reveal push 16.3 panel 位置可以通过设置panel属性data-position=&quot;right&quot; 指定panel的位置，代码如下： 1234567891011121314&lt;div data-role="page"&gt; &lt;div data-role="panel" id="panel1" data-display="push" data-position="right"&gt; hello panel &lt;/div&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;header&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#panel1" data-role="button"&gt;panel&lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;footer&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; 效果如下图： 16.4 panel 主题可以通过设置panel属性data-theme=&quot;b&quot;指定panel的主题样式，代码如下： 1234567891011121314&lt;div data-role="page"&gt; &lt;div data-role="panel" id="panel1" data-display="push" data-position="right" data-theme="b"&gt; hello panel &lt;/div&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;header&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#panel1" data-role="button"&gt;panel&lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;footer&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; 效果如下图：]]></content>
      <categories>
        <category>jQuery Mobile</category>
      </categories>
      <tags>
        <tag>jQuery Mobile</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go语言笔记（三）- 数据类型]]></title>
    <url>%2F2017%2F09%2F25%2F03_Go%E8%AF%AD%E8%A8%80%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[一、Go基本类型1. 布尔型：bool 长度：1字节 取值范围：true/false 注意：不可以用数字代表true或false 2. 整型：init/uint 根据运行平台可能为 32 或 64位 3. 8位整型：int8/uint8 长度：1字节 取值范围：-128~127/0~255 4. 字节型 byte（uint8别名） 5. 16位整型：int16/uint16 长度：2字节 取值范围：-32768~32767/0~65535 6. 32位整型: int32(rune)/uint32 长度：4字节 取值范围：-2^32/2~2^32/2-1/0~2^32-1 7. 64位整型：int64/uint64 长度：8字节 取值范围：-2^64/2~2^64/2-1/0~2^64-1 8. 浮点型：float32/float64 长度：4/8字节 小数位：精确到7/15小数位 9. 复数：complex64/complex128 长度：8/16字节 10. 足够保存指针的32位或64位整数型：uintptr11. 其他值类型： array：数组 struct：结构 string：字符串 12. 引用类型 slice：切片 map：类似hash表 chan：通道 13. 接口类型：inteface14. 函数类型：func类型零值零值并不等于空值，而是当变量被声明为某种类型后的默认值。通常情况下： 值类型的默认值为0 bool位false string为空字符串 类型别名123456789type ( byte int8 rune int32 文本 string)// usevar b 文本b = "你好，Go语言" 单个变量的声明与赋值 格式： 12// var &lt;变量名&gt; &lt;变量类型&gt;var a int 赋值格式： 12// &lt;变量名称&gt; = &lt;表达式&gt;a = 17 同时赋值： 123456// var &lt;变量名&gt; [变量类型] = &lt;表达式&gt;var a int = 17// 可以省略显式类型，由系统推断var b = 17// 变量声明与赋值的简写方法c := 17 多个变量的声明与赋值 多个全局变量的声明可使用var()的方式简写 不可以省略var，但可使用并行方式 所有变量都可以使用类型推断 局部变量不可以使用var()的方式简写，只能使用并行方式 1234567891011121314151617var ( // 使用常规方式 str = "wally" // 使用并行方式以及类型推断 a, b = 1, true)// 多个变量的声明var a, b, c, d int// 多个变量的赋值a, b, c, d = 1, 2, 3, 4// 多个变量声明的同时赋值var e, f, g int = 4, 5, 6// 类型推断var h, i, j = 10, 9, 8// 多个变量声明与赋值的最简写法l, m, n := 17, 18, 19 变量的类型转换 Go中不存在隐式转换，所有类型转换必须显式声明 转换只能发生在两种相互兼容的类型之间 类型转换的格式：&lt;变量a&gt; [:]= &lt;变量a的类型&gt;(变量b)，如果变量a之前声明过，不用写:，如果没声明过，需要添加:。 1234567// 在相互兼容的两种类型之间进行转换var a float32 = 1.2b := int(a)// 以下表达式无法通过编译var c boole = trued := int(c)]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go语言笔记（二）- 基础知识]]></title>
    <url>%2F2017%2F09%2F24%2F02_Go%E8%AF%AD%E8%A8%80%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%2F</url>
    <content type="text"><![CDATA[关键字 break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var 注释12345// 单行注释/*多行注释*/ Go程序的一般结构：basic_structure.go Go程序是通过 package 来组织的（与python类似） 只有 package 名称为 main 的包可以包含 main 函数 一个可执行程序 有且仅有 一个 main 包 通过 import 关键字来导入其它非 main 包 通过 const 关键字来进行常量的定义 通过在函数体外部使用 var 关键字来进行全局变量的声明与赋值 通过 type 关键字来进行结构(struct)或接口(interface)的声明 通过 func 关键字来进行函数的声明 123456789101112131415161718// 当前程序的包名package main// 导入外部包import std "fmt"// 声明常量const PI = 3.14// 声明全局变量var name = "wally"// 一般类型声明type newType int// 结构声明type gopher struct&#123;&#125;// 接口声明type going interface&#123;&#125;// 由 main 函数作为程序入口点启动func main() &#123; std.Println("你好，世界")&#125; 导包导入package第一种方式，依次导入 1234import "fmt"import "os"import "time"import "strings" 第二种方式，简写方式导入 123456import ( "fmt" "io" "time" "strconv") 注意： 如果导入包之后 未调用 其中的函数或者类型将会报出编译错误imported and not used: &quot;&lt;pkg&gt;&quot; package别名当使用第三方包时，包名可能会非常接近或者相同，此时就可以使用别名来进行区别和调用。如： 123456import ( f "fmt")// 调用时f.Println("hello world") 省略调用不建议使用，易混淆；不可以和别名同时使用。代码如下： 1234567import ( . "fmt")func main()&#123; // 省略包名 调用 Println("hello world")&#125; 可见性规则 Go语言中，使用 大小写 来决定该 常量、变量、类型、接口、结构或函数 是否可以被外部包所调用 首字母小写是私有private 首字母大写是公有public]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Go语言笔记（一）- 简介及安装]]></title>
    <url>%2F2017%2F09%2F24%2F01_Go%E8%AF%AD%E8%A8%80%E7%AE%80%E4%BB%8B%E5%8F%8A%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[什么是GoGo是一门并发支持、垃圾回收的编译型系统编程语言，旨在创造一门具有静态编译语言的高性能和动态语言的高效开发之间拥有良好平衡点的一门编程语言。 Go的主要特点有那些？ 类型安全 和 内存安全 以非常直观和极低代价的方案实现高并发 高效的垃圾回收机制 快速编译（同时解决C语言中头文件太多的问题） 为多核计算机提供性能提升的方案 UTF-8编码支持 实际应用 Youtube全球最大的视频网站 七牛云存储以及旗下的网盘服务 爱好者开发的Go论坛及博客 谷歌、盛大、七牛、360等企业都在用 海量开源项目：Go wiki、Go Walker、Go Language Resources Go环境配置Go安装到golang官网下载，如果不能翻墙可以到Golang中国下载。 安装方式： 源码安装 标准包安装 第三方工具安装 安装完成后，在cmd中输入go version，如果输出go版本号说明安装成功。也可以输入go env查看相关信息，输出结果如下图： GOPATH与工作空间GOPATH是我们的工作目录，如F:/Go，在windows的环境变量中新增GOPATH一项，如下图： $GOPATH目录下约定有三个子目录： src 存放源代码 pkg 编译后生成的文件 bin 编译后生成的可执行文件 go 常用命令 go get：获取远程包（需 提前安装 git或hg） go run：直接运行程序 go build：测试编译，检查是否有编译错误 go fmt：格式化源码（部分IDE在保存时自动调用） go install：编译包文件并编译整个程序 go test：运行测试文件 go doc：查看文档（CHM手册） 搭建本地Go官网，命令行输入$ godoc -http=:6060 Hello World用Go语言实现的hello world程序,代码如下： 12345678// 当前程序的包名package main// 导入其他的包import "fmt"// 由main函数作为入口点启动func main()&#123; fmt.Println("Hello World")&#125; 然后在命令行中使用$ go run &lt;file&gt;运行]]></content>
      <categories>
        <category>Go语言</category>
      </categories>
      <tags>
        <tag>Go语言基础</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jQueryMobile事件]]></title>
    <url>%2F2017%2F09%2F17%2FJQM%E4%BA%8B%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[1. 页面事件1.1 Initialization当 jQuery Mobile 中的一张典型页面进行初始化时，它会经历三个阶段： 在页面创建前 页面创建 页面初始化 1.1.1 pagebeforecreate当页面即将初始化，并且在 jQuery Mobile 已开始增强页面之前，触发该事件 1.1.2 pagecreate当页面已创建，但增强完成之前，触发该事件 1.1.3 pageinit当页面已初始化，并且在 jQuery Mobile 已完成页面增强之后，触发该事件 示例代码： html代码： 12345678910111213&lt;div data-role="page" id="index" data-title="123"&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;头部&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#second" class="ui-btn" data-transition="slideup"&gt; 这是个链接 &lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;脚步&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; js代码：1234567$('#index').on('pagebeforecreate', function () &#123; console.log("pagebeforecreate");&#125;).on('pagecreate', function () &#123; console.log("pagecreate");&#125;).on('pageinit', function () &#123; console.log("pageinit");&#125;) 页面创建时会依次触发上述三个事件，在控制台中输出如下信息： 1.2 Load事件页面加载事件属于外部页面。 无论外部页面何时载入 DOM，将触发两个事件。第一个是 pagebeforeload，第二个是 pageload （成功）或 pageloadfailed（失败）。 1.2.1 pagebeforeload在任何页面加载请求作出之前触发。 1.2.2 pageload在页面已成功加载并插入 DOM 后触发。 1.2.3 pageloadfailed如果页面加载请求失败，则触发该事件。默认地，将显示 “Error Loading Page” 消息。 html代码： 123456789101112&lt;div data-role="page" id="index" data-title="123"&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;头部&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;!--这里跳转外部链接--&gt; &lt;a href="02_button.html"&gt;02_button&lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;脚步1&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt; js代码： 1234567$(document).on('pagebeforeload', function () &#123; console.log("pagebeforeload");&#125;).on('pageload', function () &#123; console.log("pageload");&#125;).on('pageloadfailed', function () &#123; console.log("pageloadfailed");&#125;) 1.3 过渡事件从一页到另一页时的事件 1.3.1 pagebeforeshow在”去的”页面触发，在过渡动画开始前 1.3.2 pageshow在”去的”页面触发，在过渡动画完成后 1.3.3 pagebeforehide在”来的”页面触发，在过渡动画开始前 1.3.4 pagehide在”来的”页面触发，在过渡动画完成后 html代码: 123456789101112131415161718192021222324252627282930313233343536373839&lt;div data-role="page" id="index" data-title="123"&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;h1&gt;头部1&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;a href="#second" class="ui-btn" data-transition="slideup"&gt; 这是个链接1 &lt;/a&gt; &lt;a href="02_button.html"&gt;02_button&lt;/a&gt; &lt;/div&gt; &lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;脚步1&lt;/h1&gt; &lt;/div&gt;&lt;/div&gt;&lt;div data-role="page" id="second" data-fullscreen="true" data-theme = "b"&gt; &lt;div data-role="header" data-position="fixed"&gt; &lt;a data-icon = "back" data-role="button" href="#"&gt;回退&lt;/a&gt; &lt;h1&gt;头部2&lt;/h1&gt; &lt;/div&gt; &lt;div role="main" class="ui-content"&gt; &lt;div class="ui-grid-a"&gt; &lt;div class="ui-block-a"&gt; &lt;input type="button" value="1" /&gt; &lt;/div&gt; &lt;div class="ui-block-b"&gt; &lt;input type="button" value="1" /&gt; &lt;/div&gt; &lt;div class="ui-bar-b"&gt; &lt;input type="button" value="1" /&gt; &lt;/div&gt; &lt;/div&gt; &lt;a href="#index" class="ui-btn" data-transition="pop"&gt; 跳回page1 &lt;/a&gt;&lt;/div&gt;&lt;div data-role="footer" data-position="fixed"&gt; &lt;h1&gt;脚步2&lt;/h1&gt;&lt;/div&gt;&lt;/div&gt; js代码： 123456789$('#second').on('pagebeforeshow',function()&#123; console.log('pagebeforeshow')&#125;).on('pageshow',function()&#123; console.log('pageshow')&#125;).on('pagebeforehide',function()&#123; console.log('pagebeforehide')&#125;).on('pagehide',function()&#123; console.log('pagehide')&#125;) 当打开page2时先后触发pagebeforeshow与pageshow事件，输出如下内容： 当从page2回到page1，也就是page2隐藏时，先后触发事件pagebeforehide与pagehide，输出如下内容: 2. 触摸事件2.1 tap事件相当于点击事件，示例代码如下： html代码： 1&lt;button&gt;按钮&lt;/button&gt; js代码： 123$('button').on('tap',function () &#123; console.log('tap')&#125;) 2.2 taphold事件长按事件 123$('button').on("taphold",function()&#123; console.log('taphold')&#125;) 2.3 swipe事件滑动事件，用户一秒内水平拖拽大于30PX，或者纵向拖曳小于20px的事件发生时触发的事件 123$('button').on('swipe', function()&#123; console.log('swipe')&#125;) 2.4 swipeleft左滑动事件，在用户向左拖动元素大于30px时触发 123$('button').on('swipeleft', function()&#123; console.log('swipeleft')&#125;) 2.5 swiperight右滑动事件，用户向右拖动元素大于30px时触发： 123$('button').on('swiperight', function()&#123; console.log('swiperight')&#125;) 3. 滚屏事件jQuery Mobile 提供了两种滚屏事件：滚屏开始时触发和滚动结束时触发 3.1 scrollstartscrollstart 事件是在用户开始滚动页面时触发 123$(document).on("scrollstart",function()&#123; console.log("开始滚动!");&#125;); 3.2 scrollstopscrollstop 事件是在用户停止滚动页面时触发 123$(document).on("scrollstop",function()&#123; console.log("停止滚动!");&#125;); 4. 方向改变事件orientationchange当用户垂直或水平旋转移动设备时，触发方向改变（orientationchange）事件 如需使用方向改变（orientationchange）事件，请附加它到 window 对象 在回调函数中，可以使用参数event对象，返回移动设备的方向： 123$(window).on("orientationchange",function(event)&#123; alert(event.orientation);&#125;);]]></content>
      <categories>
        <category>jQuery Mobile</category>
      </categories>
      <tags>
        <tag>jQuery Mobile</tag>
      </tags>
  </entry>
</search>
